I"â<h1 id="sql-server">Sql Server</h1>

<p>The <code class="language-plaintext highlighter-rouge">Shuttle.Recall.SqlServer</code> packages provides an implementation of the <code class="language-plaintext highlighter-rouge">IProjectionService</code> interface and makes use of the <code class="language-plaintext highlighter-rouge">Shuttle.Core.Data</code>[<a href="http://shuttle.github.io/shuttle-core/overview-data/" target="_blank">^</a>] components as well as the <code class="language-plaintext highlighter-rouge">ISerializer</code> from the <code class="language-plaintext highlighter-rouge">Shuttle.Core.Infrastructure</code>[<a href="http://shuttle.github.io/shuttle-core/overview-serializer/" target="_blank">^</a>] component.</p>

<h1 id="projectionservice">ProjectionService</h1>

<p>The <code class="language-plaintext highlighter-rouge">ProjectionService</code> is the Sql Server implementation of the <code class="language-plaintext highlighter-rouge">IProjectionService</code> interface.</p>

<h2 id="constructor">Constructor</h2>

<div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="nf">ProjectionService</span><span class="p">(</span>
    <span class="n">ISerializer</span> <span class="n">serializer</span><span class="p">,</span> 
    <span class="n">IProjectionConfiguration</span> <span class="n">projectionConfiguration</span><span class="p">,</span> 
    <span class="n">IDatabaseContextFactory</span> <span class="n">databaseContextFactory</span><span class="p">,</span> 
    <span class="n">IDatabaseGateway</span> <span class="n">databaseGateway</span><span class="p">,</span> 
    <span class="n">IProjectionQueryFactory</span> <span class="n">queryFactory</span><span class="p">)</span>
</code></pre></div></div>

<p>You can use the <code class="language-plaintext highlighter-rouge">DefaultSerializer</code> implementation for the <code class="language-plaintext highlighter-rouge">ISerializer</code> from the <a href="http://shuttle.github.io/shuttle-core/overview-serializer/">Shuttle.Core.Infrastructure</a> package as a starting point.</p>

<p>The <code class="language-plaintext highlighter-rouge">IProjectionConfiguration</code> specifies the <code class="language-plaintext highlighter-rouge">ProviderName</code> and <code class="language-plaintext highlighter-rouge">ConnectionString</code> to use to connect to the database.  These can be configured using the <code class="language-plaintext highlighter-rouge">ProjectionSection</code> configuration section in the application configuration file:</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;configuration&gt;</span>
    <span class="nt">&lt;configSections&gt;</span>
        <span class="nt">&lt;sectionGroup</span> <span class="na">name=</span><span class="s">"shuttle"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;section</span> 
                <span class="na">name=</span><span class="s">"projection"</span> 
                <span class="na">type=</span><span class="s">"Shuttle.Recall.SqlServer.ProjectionSection, Shuttle.Recall.SqlServer"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/sectionGroup&gt;</span>
    <span class="nt">&lt;/configSections&gt;</span>

    <span class="nt">&lt;shuttle&gt;</span>
        <span class="nt">&lt;projection</span> <span class="na">connectionStringName=</span><span class="s">"EventStore"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/shuttle&gt;</span>

    <span class="nt">&lt;connectionStrings&gt;</span>
        <span class="nt">&lt;clear</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;add</span> 
            <span class="na">name=</span><span class="s">"EventStore"</span> 
            <span class="na">connectionString=</span><span class="s">"Data Source=.\sqlexpress;Initial Catalog=shuttle;Integrated Security=SSPI;"</span> 
            <span class="na">providerName=</span><span class="s">"System.Data.SqlClient"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/connectionStrings&gt;</span>
<span class="nt">&lt;/configuration&gt;</span>
</code></pre></div></div>

<p>You can then call <code class="language-plaintext highlighter-rouge">ProjectionSection.Configuration()</code> to return the configuration set up according to the application configuration files <code class="language-plaintext highlighter-rouge">ProjectionSection</code>.</p>

<p>The <code class="language-plaintext highlighter-rouge">IDatabaseContextFactory</code> and <code class="language-plaintext highlighter-rouge">IDatabaseGateway</code> implementation follow the structures as defined in the <a href="http://shuttle.github.io/shuttle-core/overview-data/">Shuttle.Core.Data</a> package.</p>

<p>For the <code class="language-plaintext highlighter-rouge">IProjectionQueryFactory</code> you can simply specify <code class="language-plaintext highlighter-rouge">new ProjectionQueryFactory()</code>.</p>

<h2 id="database">Database</h2>

<p>You would need to execute the <code class="language-plaintext highlighter-rouge">ProjectionCreate.sql</code> script against your projection database in order to create the structures required for the projection service to operate.</p>
:ET