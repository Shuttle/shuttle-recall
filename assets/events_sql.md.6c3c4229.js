import { _ as _export_sfc, c as createElementBlock, o as openBlock, a as createStaticVNode } from "./app.91cc6c76.js";
const __pageData = '{"title":"Sql Server","description":"","frontmatter":{},"headers":[{"level":2,"title":"Configuration","slug":"configuration"},{"level":2,"title":"Database","slug":"database"},{"level":2,"title":"Supported providers","slug":"supported-providers"},{"level":2,"title":"IKeyStore","slug":"ikeystore"},{"level":3,"title":"Contains","slug":"contains"},{"level":3,"title":"Get","slug":"get"},{"level":3,"title":"Remove","slug":"remove"},{"level":3,"title":"Add","slug":"add"},{"level":3,"title":"Add","slug":"add-1"}],"relativePath":"events/sql.md"}';
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="sql-server" tabindex="-1">Sql Server <a class="header-anchor" href="#sql-server" aria-hidden="true">#</a></h1><div class="language-"><pre><code>PM&gt; Install-Package Shuttle.Recall.Sql.Storage\n</code></pre></div><p>A Sql Server implementation of the <code>Shuttle.Recall</code> event sourcing <code>EventStore</code>.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-hidden="true">#</a></h2><div class="language-c#"><pre><code><span class="line"><span style="color:#A6ACCD;">services</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddSqlEventStorage</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"></span></code></pre></div><h2 id="database" tabindex="-1">Database <a class="header-anchor" href="#database" aria-hidden="true">#</a></h2><p>In order to create the relevant database structures execute the relevant <code>EventStoreCreate.sql</code> script:</p><div class="language-"><pre><code>%userprofile%\\.nuget\\packages\\shuttle.recall.sql.storage\\{version}\\scripts\\{provider}\\EventStoreCreate.sql\n</code></pre></div><h2 id="supported-providers" tabindex="-1">Supported providers <a class="header-anchor" href="#supported-providers" aria-hidden="true">#</a></h2><ul><li><code>Microsoft.Data.SqlClient</code></li><li><code>System.Data.SqlClient</code></li></ul><p>If you&#39;d like support for another SQL-based provider please feel free to give it a bash and send a pull request if you <em>do</em> go this route. You are welcome to create an issue and assistance will be provided where possible.</p><h2 id="ikeystore" tabindex="-1">IKeyStore <a class="header-anchor" href="#ikeystore" aria-hidden="true">#</a></h2><p>You are bound to run into situations where you have a business or other key that is required to be unique. Given that the <code>IEventStore</code> makes use of only surrogate keys the <code>IKeyStore</code> is used to create a unique list of keys associated with a given aggregate identifier.</p><p>Since the keys used in the key store have to be unique you should ensure that they contain enough information to be unique and have the intended meaning.</p><p>A key could be something such as <code>[order-number]:ord-001/2016</code>, <code>[customer-onboarding]:id-number=0000005555089</code>, or <code>[system-name/profile]:672cda1c-c3ec-4f81-a577-e64f9f14e141</code>.</p><h3 id="contains" tabindex="-1">Contains <a class="header-anchor" href="#contains" aria-hidden="true">#</a></h3><div class="language-c#"><pre><code><span class="line"><span style="color:#89DDFF;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Contains</span><span style="color:#89DDFF;">(string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">key</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>Returns <code>true</code> if the given <code>key</code> has an associated aggregate identifier.</p><hr><div class="language-c#"><pre><code><span class="line"><span style="color:#89DDFF;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Contains</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Guid</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">id</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>Returns <code>true</code> if the given <code>id</code> is present in the key store.</p><hr><h3 id="get" tabindex="-1">Get <a class="header-anchor" href="#get" aria-hidden="true">#</a></h3><div class="language-c#"><pre><code><span class="line"><span style="color:#FFCB6B;">Guid</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">(string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">key</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>Returns the <code>Guid</code> associated with the given key; else <code>null</code>.</p><hr><h3 id="remove" tabindex="-1">Remove <a class="header-anchor" href="#remove" aria-hidden="true">#</a></h3><div class="language-c#"><pre><code><span class="line"><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Remove</span><span style="color:#89DDFF;">(string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">key</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Remove</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Guid</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">id</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>When specifying the <code>key</code> the assocation with the identifier will be removed. When specifying the <code>id</code> all keys associated with the given <code>id</code> will be removed.</p><hr><h3 id="add" tabindex="-1">Add <a class="header-anchor" href="#add" aria-hidden="true">#</a></h3><div class="language-c#"><pre><code><span class="line"><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Guid</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">id</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">key</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>Creates an association between the <code>id</code> and the <code>key</code>.</p><hr><h3 id="add-1" tabindex="-1">Add <a class="header-anchor" href="#add-1" aria-hidden="true">#</a></h3><div class="language-c#"><pre><code><span class="line"><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Rekey</span><span style="color:#89DDFF;">(string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">key</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">rekey</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>Changes <code>key</code> to a new key specified by <code>rekey</code>.</p>', 37);
const _hoisted_38 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_38);
}
var sql = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { __pageData, sql as default };
