import { _ as _export_sfc, c as createElementBlock, o as openBlock, a as createStaticVNode } from "./app.8edda2d9.js";
const __pageData = '{"title":"Sql Server","description":"","frontmatter":{},"headers":[{"level":2,"title":"Event Processing","slug":"event-processing"},{"level":2,"title":"Application Configuration File","slug":"application-configuration-file"},{"level":2,"title":"Registration / Activation","slug":"registration-activation"}],"relativePath":"projections/sql.md"}';
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="sql-server" tabindex="-1">Sql Server <a class="header-anchor" href="#sql-server" aria-hidden="true">#</a></h1><div class="language-"><pre><code>PM&gt; Install-Package Shuttle.Recall.Sql.EventProcessing\n</code></pre></div><p>A Sql Server implementation of the <code>Shuttle.Recall</code> event sourcing mechanism.</p><h2 id="event-processing" tabindex="-1">Event Processing <a class="header-anchor" href="#event-processing" aria-hidden="true">#</a></h2><div class="language-c#"><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// use any of the supported DI containers</span></span>\n<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">NinjectComponentContainer</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">StandardKernel</span><span style="color:#89DDFF;">());</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// This registers the event store dependencies provided by Shuttle.Recall </span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// - also registers event handlers in referenced assemblies</span></span>\n<span class="line"><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">RegisterEventStore</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// This registers the sql server implementations provided by Shuttle.Recall.Sql.Storage, for instance</span></span>\n<span class="line"><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">RegisterEventStoreStorage</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// This registers the sql server implementations provided by Shuttle.Recall.Sql.EventProcessing, for instance</span></span>\n<span class="line"><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">RegisterEventProcessing</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// The following is important to remember as it connects the event processing module to the pipeline factory</span></span>\n<span class="line"><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Resolve</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">EventProcessingModule</span><span style="color:#89DDFF;">&gt;();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Register</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IMyQueryFactory</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyQueryFactory</span><span style="color:#89DDFF;">&gt;();</span></span>\n<span class="line"><span style="color:#A6ACCD;">container</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Register</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IMyQuery</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">MyQuery</span><span style="color:#89DDFF;">&gt;();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">processor</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> container</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Resolve</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IEventProcessor</span><span style="color:#89DDFF;">&gt;();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> (container.Resolve&lt;IDatabaseContextFactory&gt;().Create(&quot;ProjectionConnectionName&quot;))</span></span>\n<span class="line"><span style="color:#A6ACCD;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Adds the relevant projection to the processor which keeps track of the projection position</span></span>\n<span class="line"><span style="color:#A6ACCD;">    processor.AddProjection(&quot;ProjectionName&quot;)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Attaches the given event handler implementation to the projection, by name</span></span>\n<span class="line"><span style="color:#A6ACCD;">    resolver</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddEventHandler</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">BowlingHandler</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ProjectionName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// A short-hand format for the above is as follows:</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// resolver.AddEventHandler&lt;BowlingHandler&gt;(processor.AddProjection(&quot;ProjectionName&quot;));</span></span>\n<span class="line"><span style="color:#A6ACCD;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">processor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Start</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// wait for application run to complete</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">processor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Dispose</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"></span></code></pre></div><h2 id="application-configuration-file" tabindex="-1">Application Configuration File <a class="header-anchor" href="#application-configuration-file" aria-hidden="true">#</a></h2><div class="language-xml"><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">configuration</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">configSections</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">sectionGroup</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">shuttle</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">section</span><span style="color:#89DDFF;"> </span></span>\n<span class="line"><span style="color:#89DDFF;">				</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">projection</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span></span>\n<span class="line"><span style="color:#89DDFF;">				</span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Shuttle.Recall.Sql.EventProcessing.ProjectionSection, Shuttle.Recall.Sql.EventProcessing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">sectionGroup</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">configSections</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">shuttle</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">projection</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">eventStoreConnectionStringName</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EventStore</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">eventProjectionConnectionStringName</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EventProjection</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">shuttle</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">connectionStrings</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">clear</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">add</span><span style="color:#89DDFF;"> </span></span>\n<span class="line"><span style="color:#89DDFF;">			</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EventStore</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span></span>\n<span class="line"><span style="color:#89DDFF;">			</span><span style="color:#C792EA;">connectionString</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Data Source=.;Initial Catalog=EventStoreDatabase;Integrated Security=SSPI;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span></span>\n<span class="line"><span style="color:#89DDFF;">			</span><span style="color:#C792EA;">providerName</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">System.Data.SqlClient</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">add</span><span style="color:#89DDFF;"> </span></span>\n<span class="line"><span style="color:#89DDFF;">			</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EventProjection</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span></span>\n<span class="line"><span style="color:#89DDFF;">			</span><span style="color:#C792EA;">connectionString</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Data Source=.;Initial Catalog=EventProjectionDatabase;Integrated Security=SSPI;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span></span>\n<span class="line"><span style="color:#89DDFF;">			</span><span style="color:#C792EA;">providerName</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">System.Data.SqlClient</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">connectionStrings</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">configuration</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>The <code>IDatabaseContextFactory</code> and <code>IDatabaseGateway</code> implementation follow the structures as defined in the <a href="https://shuttle.github.io/shuttle-core/data/shuttle-core-data.html" target="_blank" rel="noopener noreferrer">Shuttle.Core.Data</a> package.</p><h2 id="registration-activation" tabindex="-1">Registration / Activation <a class="header-anchor" href="#registration-activation" aria-hidden="true">#</a></h2><p>The required components may be registered by calling <code>ComponentRegistryExtensions.RegisterEventProcessing(IComponentRegistry)</code>.</p><p>In order for the event processing module to attach to the <code>IPipelineFactory</code> you would need to resolve it using <code>IComponentResolver.Resolve&lt;EventProcessingModule&gt;()</code>.</p>', 11);
const _hoisted_12 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_12);
}
var sql = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { __pageData, sql as default };
